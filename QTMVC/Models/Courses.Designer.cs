//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Courses", "InstructorOrganization", "Instructor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QTMVC.Models.Instructor), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QTMVC.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("Courses", "CourseCourseGroup", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QTMVC.Models.Course), "CourseGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QTMVC.Models.CourseGroup), true)]
[assembly: EdmRelationshipAttribute("Courses", "InstructorCourseGroup", "Instructor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QTMVC.Models.Instructor), "CourseGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QTMVC.Models.CourseGroup), true)]
[assembly: EdmRelationshipAttribute("Courses", "OrganizationEmployee", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QTMVC.Models.Organization), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QTMVC.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("Courses", "CoursesEmployees", "CourseGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QTMVC.Models.CourseGroup), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QTMVC.Models.Employee))]

#endregion

namespace QTMVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CoursesContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CoursesContainer object using the connection string found in the 'CoursesContainer' section of the application configuration file.
        /// </summary>
        public CoursesContainer() : base("name=CoursesContainer", "CoursesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoursesContainer object.
        /// </summary>
        public CoursesContainer(string connectionString) : base(connectionString, "CoursesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoursesContainer object.
        /// </summary>
        public CoursesContainer(EntityConnection connection) : base(connection, "CoursesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Instructor> Instructors
        {
            get
            {
                if ((_Instructors == null))
                {
                    _Instructors = base.CreateObjectSet<Instructor>("Instructors");
                }
                return _Instructors;
            }
        }
        private ObjectSet<Instructor> _Instructors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CourseGroup> CourseGroups
        {
            get
            {
                if ((_CourseGroups == null))
                {
                    _CourseGroups = base.CreateObjectSet<CourseGroup>("CourseGroups");
                }
                return _CourseGroups;
            }
        }
        private ObjectSet<CourseGroup> _CourseGroups;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Instructors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstructors(Instructor instructor)
        {
            base.AddObject("Instructors", instructor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CourseGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourseGroups(CourseGroup courseGroup)
        {
            base.AddObject("CourseGroups", courseGroup);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Courses", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Course object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Course CreateCourse(global::System.Int32 id, global::System.String name)
        {
            Course course = new Course();
            course.Id = id;
            course.Name = name;
            return course;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "CourseCourseGroup", "CourseGroup")]
        public EntityCollection<CourseGroup> CourseGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseGroup>("Courses.CourseCourseGroup", "CourseGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseGroup>("Courses.CourseCourseGroup", "CourseGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Courses", Name="CourseGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CourseGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CourseGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="instructorId">Initial value of the InstructorId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CourseGroup CreateCourseGroup(global::System.Int32 id, global::System.Int32 instructorId, global::System.String name)
        {
            CourseGroup courseGroup = new CourseGroup();
            courseGroup.Id = id;
            courseGroup.InstructorId = instructorId;
            courseGroup.Name = name;
            return courseGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                OnCourseIdChanging(value);
                ReportPropertyChanging("CourseId");
                _CourseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseId");
                OnCourseIdChanged();
            }
        }
        private global::System.Int32 _CourseId = 1;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructorId
        {
            get
            {
                return _InstructorId;
            }
            set
            {
                OnInstructorIdChanging(value);
                ReportPropertyChanging("InstructorId");
                _InstructorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructorId");
                OnInstructorIdChanged();
            }
        }
        private global::System.Int32 _InstructorId;
        partial void OnInstructorIdChanging(global::System.Int32 value);
        partial void OnInstructorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
		[DisplayName("Название")]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "CourseCourseGroup", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Courses.CourseCourseGroup", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Courses.CourseCourseGroup", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Courses.CourseCourseGroup", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("Courses.CourseCourseGroup", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "InstructorCourseGroup", "Instructor")]
        public Instructor Instructor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("Courses.InstructorCourseGroup", "Instructor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("Courses.InstructorCourseGroup", "Instructor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instructor> InstructorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("Courses.InstructorCourseGroup", "Instructor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instructor>("Courses.InstructorCourseGroup", "Instructor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "CoursesEmployees", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Courses.CoursesEmployees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Courses.CoursesEmployees", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Courses", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fio">Initial value of the Fio property.</param>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String fio, global::System.Int32 organizationId)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.Fio = fio;
            employee.OrganizationId = organizationId;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fio
        {
            get
            {
                return _Fio;
            }
            set
            {
                OnFioChanging(value);
                ReportPropertyChanging("Fio");
                _Fio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fio");
                OnFioChanged();
            }
        }
        private global::System.String _Fio;
        partial void OnFioChanging(global::System.String value);
        partial void OnFioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                OnOrganizationIdChanging(value);
                ReportPropertyChanging("OrganizationId");
                _OrganizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationId");
                OnOrganizationIdChanged();
            }
        }
        private global::System.Int32 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int32 value);
        partial void OnOrganizationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "OrganizationEmployee", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("Courses.OrganizationEmployee", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("Courses.OrganizationEmployee", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("Courses.OrganizationEmployee", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("Courses.OrganizationEmployee", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "CoursesEmployees", "CourseGroup")]
        public EntityCollection<CourseGroup> CourseGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseGroup>("Courses.CoursesEmployees", "CourseGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseGroup>("Courses.CoursesEmployees", "CourseGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Courses", Name="Instructor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Instructor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Instructor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fio">Initial value of the Fio property.</param>
        /// <param name="eMail">Initial value of the EMail property.</param>
        public static Instructor CreateInstructor(global::System.Int32 id, global::System.String fio, global::System.String eMail)
        {
            Instructor instructor = new Instructor();
            instructor.Id = id;
            instructor.Fio = fio;
            instructor.EMail = eMail;
            return instructor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fio
        {
            get
            {
                return _Fio;
            }
            set
            {
                OnFioChanging(value);
                ReportPropertyChanging("Fio");
                _Fio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fio");
                OnFioChanged();
            }
        }
        private global::System.String _Fio;
        partial void OnFioChanging(global::System.String value);
        partial void OnFioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "InstructorOrganization", "Organization")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("Courses.InstructorOrganization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("Courses.InstructorOrganization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "InstructorCourseGroup", "CourseGroup")]
        public EntityCollection<CourseGroup> CourseGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseGroup>("Courses.InstructorCourseGroup", "CourseGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseGroup>("Courses.InstructorCourseGroup", "CourseGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Courses", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="iNN">Initial value of the INN property.</param>
        /// <param name="instructorId">Initial value of the InstructorId property.</param>
        public static Organization CreateOrganization(global::System.Int32 id, global::System.String name, global::System.String iNN, global::System.Int32 instructorId)
        {
            Organization organization = new Organization();
            organization.Id = id;
            organization.Name = name;
            organization.INN = iNN;
            organization.InstructorId = instructorId;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructorId
        {
            get
            {
                return _InstructorId;
            }
            set
            {
                OnInstructorIdChanging(value);
                ReportPropertyChanging("InstructorId");
                _InstructorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructorId");
                OnInstructorIdChanged();
            }
        }
        private global::System.Int32 _InstructorId;
        partial void OnInstructorIdChanging(global::System.Int32 value);
        partial void OnInstructorIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "InstructorOrganization", "Instructor")]
        public Instructor Instructor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("Courses.InstructorOrganization", "Instructor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("Courses.InstructorOrganization", "Instructor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instructor> InstructorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("Courses.InstructorOrganization", "Instructor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instructor>("Courses.InstructorOrganization", "Instructor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Courses", "OrganizationEmployee", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Courses.OrganizationEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Courses.OrganizationEmployee", "Employee", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
